diff --git a/network/netplay/netplay_handshake.c b/network/netplay/netplay_handshake.c
index 08bb128e98..728536f1f8 100644
--- a/network/netplay/netplay_handshake.c
+++ b/network/netplay/netplay_handshake.c
@@ -285,8 +285,8 @@ static void handshake_password(void *ignore, const char *line)
       netplay_send_flush(&connection->send_packet_buffer, connection->fd, false);
 
 #ifdef HAVE_MENU
-   menu_input_dialog_end();
-   retroarch_menu_running_finished(false);
+   //menu_input_dialog_end();
+   //retroarch_menu_running_finished(false);
 #endif
 }
 #endif
@@ -406,26 +406,6 @@ bool netplay_handshake_init(netplay_t *netplay,
       return false;
    }
 
-   /* If a password is demanded, ask for it */
-   if (!netplay->is_server && (connection->salt = ntohl(header[3])))
-   {
-#ifdef HAVE_MENU
-      menu_input_ctx_line_t line;
-      retroarch_menu_running();
-#endif
-
-      handshake_password_netplay = netplay;
-
-#ifdef HAVE_MENU
-      memset(&line, 0, sizeof(line));
-      line.label         = msg_hash_to_str(MSG_NETPLAY_ENTER_PASSWORD);
-      line.label_setting = "no_setting";
-      line.cb            = handshake_password;
-      if (!menu_input_dialog_start(&line))
-         return false;
-#endif
-   }
-
    /* Send our nick */
    nick_buf.cmd[0] = htonl(NETPLAY_CMD_NICK);
    nick_buf.cmd[1] = htonl(sizeof(nick_buf.nick));
@@ -440,6 +420,19 @@ bool netplay_handshake_init(netplay_t *netplay,
    connection->mode = NETPLAY_CONNECTION_PRE_NICK;
    *had_input = true;
    netplay_recv_flush(&connection->recv_packet_buffer);
+
+   /* If a password is demanded, ask for it */
+   if (!netplay->is_server && (connection->salt = ntohl(header[3])))
+   {
+     handshake_password_netplay = netplay;
+
+     settings_t *settings = config_get_ptr();
+     const char* password = (settings->bools.netplay_start_as_spectator) ?
+                            settings->paths.netplay_spectate_password : settings->paths.netplay_password;
+     handshake_password(NULL, password);
+     netplay_recv_flush(&connection->recv_packet_buffer);
+   }
+
    return true;
 
 error:
